# Generated by Django 4.0.6 on 2022-08-30 19:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1200)),
                ('keywords', models.CharField(blank=True, default='All', max_length=1200, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('old_price', models.FloatField(blank=True, null=True)),
                ('details', models.TextField(blank=True, max_length=5000, null=True)),
                ('description', models.TextField(blank=True, max_length=5000, null=True)),
                ('categories', models.ManyToManyField(blank=True, null=True, to='shop.category')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('on the way', 'on the way'), ('not handled', 'not handled'), ('completed', 'completed')], default='not handled', max_length=200)),
                ('subtotal', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.item')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.order')),
            ],
        ),
        migrations.CreateModel(
            name='ParentOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('street_name', models.CharField(max_length=200)),
                ('house_number', models.CharField(max_length=200)),
                ('postal_code', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('message', models.TextField(blank=True, max_length=1000, null=True)),
                ('subtotal', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('datetime', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('logo', models.ImageField(default='logos/logo.png', upload_to='seller_logos')),
                ('etsy_url', models.CharField(max_length=300, null=True)),
                ('delivery_price', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StyleGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=30)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.item')),
            ],
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('price', models.FloatField(blank=True, null=True)),
                ('style_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.stylegroup')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemStyleGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.orderitem')),
                ('style_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.stylegroup')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_item_style_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.orderitemstylegroup')),
                ('style', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.style')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='parent_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.parentorder'),
        ),
        migrations.AddField(
            model_name='order',
            name='seller',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.seller'),
        ),
        migrations.AddField(
            model_name='item',
            name='seller',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.seller'),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='item_images')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.item')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='seller',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.seller'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
    ]
